#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2012 Martin Ueding <dev@martin-ueding.de>

"""
Script to parse snapshots of `top` and `sensors` from a server.
"""

__docformat__ = "javadoc en"

import csv
import datetime
import itertools
import optparse
import os
import sys
import time

import libcomputer
import parsers
import reports


def main():
    (options, args) = _parse_args()
    
    # If an output file is given, use that instead of standard output.
    if options.outfile == "-":
        outfile = sys.stdout
    else:
        outfile = open(options.outfile, "w")

    # Create a new computer if no import is given.
    if options.importfile is None:
        computer = libcomputer.Computer()
    
        # If nothing is imported, there have to be some files to parse.
        if len(args) < 1:
            print "I need some input."
            sys.exit(1)
    
    # Import the dump.
    else:
        with open(options.importfile) as f:
            computer = eval(f.read())

    # Iterate through all folders that are given on the command line.
    for infolder in args:
        os.path.walk(infolder, parsers.parsefolder, (options, computer))
    
    # Maximum Report.
    if options.max:
        reports.maximum(computer)
        
    # Computer Overview Report.
    if options.computer:
        reports.computer_overview(outfile, computer)
            
    # Single Process Report.
    if options.process is not None:
        reports.process_report(outfile, computer.processes, options.process, options.format)
            
    # Complete Dump.
    if options.dump:
        reports.dump(outfile, computer)

        
    # If an outfile was used, close it.
    if options.outfile != "-":
        outfile.close()


def _parse_args():
    parser = optparse.OptionParser(usage="chaos_log folders...", description="Parses chaos log files and offeres summaries.")
    parser.add_option("--max", dest="max", action="store_true", default=False, help="Show min-max status.")
    parser.add_option("-v", dest="verbose", action="store_true", default=False, help="Show steps.")
    parser.add_option("--files", dest="files", action="store_true", default=False, help="Show each processed file.")
    parser.add_option("--computer", dest="computer", action="store_true", default=False, help="Report for whole computer.")
    parser.add_option("--process", dest="process", default=None, help="Report for only this process")
    parser.add_option("-o", dest="outfile", default="-", help="If given, write report into that file.")
    parser.add_option("--format", dest="format", default="csv", help="Choose CSV or Plain [default: %default]")
    parser.add_option("--dump", dest="dump", action="store_true", default=False, help="Dump whole data to outfile.")
    parser.add_option("--import", dest="importfile", default=None, help="Import from given dump.")

    return parser.parse_args()
        

if __name__ == "__main__":
    main()
